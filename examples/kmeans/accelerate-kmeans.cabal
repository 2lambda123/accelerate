name:                   accelerate-kmeans
version:                0.1.0.0
synopsis:               An implementation of k-means clustering in Accelerate
description:            An implementation of k-means clustering in Accelerate
license:                BSD3
license-file:           LICENSE
author:                 Trevor L. McDonell
maintainer:             Trevor L. McDonell <tmcdonell@cse.unsw.edu.au>
category:               Math
build-type:             Simple
cabal-version:          >=1.10

Flag cuda
Flag llvm-cpu
Flag llvm-gpu

library
  exposed-modules:      Data.Array.Accelerate.Math.Kmeans

  build-depends:        base                    >= 4.6 && <4.8,
                        accelerate              >= 0.14

  ghc-options:          -Wall -O2 -dcore-lint

  default-language:     Haskell2010


executable generate-samples
  Main-is:              GenSamples.hs
  other-modules:        TestCore
  hs-source-dirs:       test
  ghc-options:          -Wall -O2 -dcore-lint
  default-language:     Haskell2010

  build-depends:        base                    >= 4.6 && <4.8,
                        array,
                        binary,
                        normaldistribution,
                        random

executable kmeans
  Main-is:              kmeans.hs
  hs-source-dirs:       test
  ghc-options:          -Wall -O2 -dcore-lint -threaded -eventlog -rtsopts
  default-language:     Haskell2010

  build-depends:        base                    >= 4.6 && <4.8,
                        accelerate              >= 0.14,
                        accelerate-kmeans,
                        array,
                        binary,
                        criterion

  if flag(llvm-cpu)
    cpp-options:        -DACCELERATE_LLVM_NATIVE_BACKEND
    build-depends:      accelerate-llvm-native  >= 0.15

  if flag(llvm-gpu)
    cpp-options:        -DACCELERATE_LLVM_PTX_BACKEND
    build-depends:      accelerate-llvm-ptx     >= 0.15

  if flag(cuda)
    build-depends:      accelerate-cuda         >= 0.14

